    @model Mindful.Models.Teacher
    @{
        ViewBag.Title = "Edit Teacher";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <div class="teachers-container">
        <div class="teachers-layout">

            <aside class="sidebar">
                <div class="drawer-card shadow">
                    <div class="drawer-Header">
                        <p style="color:white; font-size:24px">Mindful</p>
                        <div class="drawer-divider" style="margin-top : 20px ; margin-bottom : 20px"></div>
                    </div>
                    <div class="drawer-card-body">
                        <nav class="list-group">
                            <a href="@Url.Action("Index", "Home")" class="list-group-item">Dashboard</a>
                            <a href="@Url.Action("Index", "Teacher")" class="list-group-item active">Teachers</a>
                        <a href="@Url.Action("Index", "Student")" class="list-group-item">Student</a>
                        <a href="@Url.Action("Index", "Subject")" class="list-group-item">Subjects</a>
                            <a href="#" class="list-group-item">Statistics</a>
                        </nav>
                    </div>
                </div>
            </aside>

            <main class="content">
                <div class="card shadow">
                    <div class="card-header">
                        <h6>@ViewBag.Title</h6>
                    </div>
                    <div class="card-body">
                        <form asp-action="@ViewContext.RouteData.Values["action"]" method="post">
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.id)

                            <div class="form-group">
                                <label asp-for="first_Name"></label>
                                <input asp-for="first_Name" class="form-control" />
                                <span asp-validation-for="first_Name" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="last_Name"></label>
                                <input asp-for="last_Name" class="form-control" />
                                <span asp-validation-for="last_Name" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="email"></label>
                                <input asp-for="email" type="email" class="form-control" />
                                <span asp-validation-for="email" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="birthdate"></label>
                                <input asp-for="birthdate" type="date" class="form-control" />
                                <span asp-validation-for="birthdate" class="text-danger"></span>
                            </div>

                            <div class="actions mt-3">
                                <button type="submit" class="add-btn">Save</button>
                                <a href="@Url.Action("Index", "Teacher")" class="btn btn-secondary">Cancel</a>
                            </div>
                        <div class="form-group">
                            <label for="SelectedSubjectId">Assign Subject</label>
                            <select asp-for="SelectedSubjectId" class="form-control" asp-items="Model.SubjectOptions">
                                <option value="">-- Select Subject --</option>
                            </select>
                        </div>
                            <div class="form-group">
                                <label>Assigned Subjects</label>
                                <div id="assigned-subjects" class="subject-tags">
                                    @for (int i = 0; i < Model.AssignedSubjectOptions?.Count; i++)
                                    {
                                        var subject = Model.AssignedSubjectOptions[i];
                                        <span class="tag">
                                            @subject.Text
                                            <button type="button" class="remove-btn" onclick="removeSubject(@subject.Value)">✕</button>
                                            <input type="hidden" name="AssignedSubjectIds" value="@subject.Value" />
                                        </span>
                                    }
                                </div>
                            </div>


                        </form>
                    </div>
                </div>
            </main>
        </div>
    </div>

@section Scripts {
    <script>
        function removeSubject(subjectId) {
            const input = document.querySelector(`input[name="AssignedSubjectIds"][value="${subjectId}"]`);
            const tag = input?.closest('.tag');
            if (tag) tag.remove();
        }
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
